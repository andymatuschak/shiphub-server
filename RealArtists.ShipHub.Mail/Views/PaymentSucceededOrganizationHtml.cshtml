@* Generator: Template GeneratePrettyNames: true *@
@using RealArtists.ShipHub.Mail;
@using RealArtists.ShipHub.Mail.Models;
@inherits ShipHubTemplateBase<PaymentSucceededOrganizationMailMessage>
@{
  Layout = new RealArtists.ShipHub.Mail.Views.LayoutHtml() { Model = Model };
}
<p>
    We received payment for your organization Ship subscription.
</p>
<p>
    <strong>@string.Format("{0:C}", Model.AmountPaid)</strong> was charged to your @PaymentMethodSummaryHtml(Model.PaymentMethodSummary)
    and covers service through <strong>@Model.ServiceThroughDate.ToString("MMM d, yyyy")</strong>.
</p>
<p>
    <a href="@Model.InvoicePdfUrl">Download a PDF receipt</a> for your records.
</p>

<p>
    In the prior month beginning on @Model.PreviousMonthStart.ToString("MMM d, yyyy"), your organization
    had <strong>@Model.PreviousMonthActiveUsersCount active Ship user@(Model.PreviousMonthActiveUsersCount == 1 ? "" : "s")</strong>.
</p>
@if (Model.PreviousMonthActiveUsersCount > 1) {
<p>
    The base monthly fee (paid as part of your last invoice) covers the first active Ship user, so you were billed for @(Model.PreviousMonthActiveUsersCount - 1)
    additional active user@((Model.PreviousMonthActiveUsersCount - 1) == 1 ? "" : "s") on this invoice.
</p>
}
@if (Model.PreviousMonthActiveUsersCount > 0) {
    @if (Model.PreviousMonthActiveUsersCount == Model.PreviousMonthActiveUsersSample.Length) {
    <p>
        Active Ship users in your organization in the prior month were: @(string.Join(", ", Model.PreviousMonthActiveUsersSample.Select(x => "<strong>" + x + "</strong>"))).
    </p>
    } else {
    <p>
        Active Ship users in your organization in the prior month included: @(string.Join(", ", Model.PreviousMonthActiveUsersSample.Select(x => "<strong>" + x + "</strong>"))), and <strong>@(Model.PreviousMonthActiveUsersCount - Model.PreviousMonthActiveUsersSample.Count()) others</strong>.
    </p>
    }
}
<p class="last">
    We appreciate your business!
</p>

@* Generator: Template GeneratePrettyNames: true *@
@using RealArtists.ShipHub.Mail;
@using RealArtists.ShipHub.Mail.Models;
@inherits ShipHubTemplateBase<PaymentSucceededOrganizationMailMessage>
@{
  Layout = new RealArtists.ShipHub.Mail.Views.LayoutPlain() { Model = Model };
}
We received payment for your organization Ship subscription.

@string.Format("{0:C}", Model.AmountPaid) was charged to your @PaymentMethodSummaryPlain(Model.PaymentMethodSummary) and covers service through @Model.ServiceThroughDate.ToString("MMM d, yyyy").

Download a PDF receipt for your records:
@Model.InvoicePdfUrl

In the prior month beginning on @Model.PreviousMonthStart.ToString("MMM d, yyyy"), your organization had @Model.PreviousMonthActiveUsersCount active Ship user@(Model.PreviousMonthActiveUsersCount == 1 ? "" : "s").

@if (Model.PreviousMonthActiveUsersCount > 1) {
<text>The base monthly fee (paid as part of your last invoice) covers the first active Ship user, so you were billed for @(Model.PreviousMonthActiveUsersCount - 1) additional active user@((Model.PreviousMonthActiveUsersCount - 1) == 1 ? "" : "s") on this invoice.
</text>
}
@if (Model.PreviousMonthActiveUsersCount > 0) {
    if (Model.PreviousMonthActiveUsersCount == Model.PreviousMonthActiveUsersSample.Count()) {
<text>Active Ship users in your organization in the prior month were: @(string.Join(", ", Model.PreviousMonthActiveUsersSample)).
</text>
    } else {
<text>Active Ship users in your organization in the prior month included: @(string.Join(", ", Model.PreviousMonthActiveUsersSample)), and @(Model.PreviousMonthActiveUsersCount - Model.PreviousMonthActiveUsersSample.Count()) others.
</text>
    }
}
We appreciate your business!
